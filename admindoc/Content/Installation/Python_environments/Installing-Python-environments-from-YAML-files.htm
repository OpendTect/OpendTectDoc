<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Installing Python environments from YAML files</h1>
        <p>The Python environments we provide can be installed into:</p>
        <ul>
            <li>
                <p>the Python miniconda3 base directory that is installed with the OpendTect installer,</p>
            </li>
            <li>
                <p>your own miniconda3 installation or into</p>
            </li>
            <li>
                <p>your own anaconda3 installation.</p>
            </li>
        </ul>
        <h2>Download the OpendTect Python YAML files</h2>
        <p>For Linux:</p>
        <ul>
            <li>
                <p><a href="https://download.opendtect.org/relman/Python/1.2.6/odmlpython-cpu-mkl_lux64.yml">odmlpython-cpu-mkl_lux64.yml</a>
                </p>
            </li>
            <li>
                <p><a href="https://download.opendtect.org/relman/Python/1.2.6/odmlpython-cuda10_lux64.yml">odmlpython-cuda10_lux64.yml</a>
                </p>
            </li>
        </ul>
        <p>For Windows:</p>
        <ul>
            <li>
                <p><a href="https://download.opendtect.org/relman/Python/1.2.6/odmlpython-cpu-mkl_win64.yml">odmlpython-cpu-mkl_win64.yml</a>
                </p>
            </li>
            <li>
                <p><a href="https://download.opendtect.org/relman/Python/1.2.6/odmlpython-cuda10_win64.yml">odmlpython-cuda10_win64.yml</a>
                </p>
            </li>
        </ul>
        <p>The YAML files contain a list of essential packages that are needed inside the Python environment. You can choose to install either the cpu-mkl or cuda10 one or both. The cpu-mkl one is for running the Machine Learning jobs on the CPU only. In most cases the Cuda10 one would be the best option so that the Machine Learning jobs can be run on the Nvidia GPU.</p>
        <h2>Install the environments</h2>
        <p>On Linux:</p>
        <ol>
            <li>
                <p>Open a terminal/konsole.</p>
            </li>
            <li>
                <p>Then run the following:</p>
                <ol style="list-style-type: lower-alpha;">
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">cd</span> conda installation directory (e.g. <span style="font-family: 'Courier New'; font-size: 10pt;">cd /home/user/Miniconda3</span>)</p>
                    </li>
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">cd bin</span>
                        </p>
                    </li>
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">bash ; source activate</span>
                        </p>
                    </li>
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">conda env create --file /pathto/odmlpython-cpu-mkl_lux64.yml</span>
                        </p>
                    </li>
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">conda env create --file /pathto/odmlpython-cuda10_lux64.yml</span>
                        </p>
                    </li>
                    <li>
                        <p>Conda will collect the packages it needs to install from the YAML file.</p>
                    </li>
                    <li>
                        <p>Then it will download and extract the packages, and do the transaction.</p>
                    </li>
                    <li>
                        <p>To make the Python environments completely operational with OpendTect <MadCap:variable name="Variables.VersionNumber" />'s Machine Learning plugin it is necessary to replace a callbacks.py of keras on the system. </p>
                    </li>
                </ol>
            </li>
        </ol>
        <p>On Windows:</p>
        <ol>
            <li>
                <p>Open the Command Prompt. Run as administrator if the Python installation directory is on a location for which the user requires administrative rights.</p>
            </li>
            <li>
                <p>Then run the following:</p>
                <ol style="list-style-type: lower-alpha;">
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">cd</span> conda installation directory (e.g. <span style="font-family: 'Courier New'; font-size: 10pt;">cd C:\Users\user\Miniconda3</span>)</p>
                    </li>
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">cd condabin</span>
                        </p>
                    </li>
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">activate.bat</span>
                        </p>
                    </li>
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">conda env create --file C:\pathto\odmlpython-cpu-mkl_win64.yml</span>
                        </p>
                    </li>
                    <li>
                        <p><span style="font-family: 'Courier New'; font-size: 10pt;">conda env create --file C:\pathto\odmlpython-cuda10_win64.yml</span>
                            <br />
                            <br />
                            <img src="../../Resources/Images/install-python-environments-windows.png" style="width: 883px;height: 284px;" />
                            <br /><small>Figure:&#160;Install Python environments from the YAML file on Windows</small>
                        </p>
                    </li>
                    <li>
                        <p>Conda will collect the packages it needs to install from the YAML file.</p>
                    </li>
                    <li>
                        <p>Then it will download and extract the packages, do the transaction and install xgboost with pip.</p>
                    </li>
                    <li>
                        <p>To make the Python environments completely operational with OpendTect <MadCap:variable name="Variables.VersionNumber" />'s Machine Learning plugin it is necessary to replace a callbacks.py of keras and to get the cupti library on the system. The cupti library is only needed for the cuda10 environment.</p>
                    </li>
                </ol>
            </li>
        </ol>
        <h2>Fixes for callbacks.py and cupti</h2>
        <p style="font-weight: normal;"><b>callbacks.py</b>
        </p>
        <p>For Linux:</p>
        <ul>
            <li>
                <p>Download <a href="https://download.opendtect.org/relman/Python/1.2.6/extras-custom/lux64/callbacks.py">callbacks.py</a>.</p>
            </li>
            <li>
                <p>It needs to be copied into <span style="font-family: 'Courier New'; font-size: 10pt;">odmlpython-cpu-mkl/lib/python3.7/site-packages/tensorflow_core/python/keras</span> and/or <span style="font-family: 'Courier New'; font-size: 10pt;">odmlpython-cuda10/lib/python3.7/site-packages/tensorflow_core/python/keras</span> so that it overwrites the existing callbacks.py file.</p>
            </li>
        </ul>
        <p>For Windows:</p>
        <ul>
            <li>
                <p>Download <a href="https://download.opendtect.org/relman/Python/1.2.6/extras-custom/win64/callbacks.py">callbacks.py</a>.</p>
            </li>
            <li>
                <p>It needs to be copied into <span style="font-family: 'Courier New'; font-size: 10pt;">odmlpython-cpu-mkl\Lib\site-packages\tensorflow_core\python\keras</span> and/or <span style="font-family: 'Courier New'; font-size: 10pt;">odmlpython-cuda10\Lib\site-packages\tensorflow_core\python\keras</span> so that it overwrites the existing callbacks.py file.</p>
            </li>
        </ul>
        <p style="font-weight: bold;">cupti libraries (Windows only)</p>
        <p style="font-weight: normal;">There are two ways to apply the fix:</p>
        <ol>
            <li>
                <p style="font-weight: normal;">You can download <a href="https://download.opendtect.org/relman/Python/1.2.6/extras-custom/win64/cupti.lib">cupti.lib</a> and <a href="https://download.opendtect.org/relman/Python/1.2.6/extras-custom/win64/cupti64_101.dll">cupti64_101.dll</a>.<br />Then copy them into <span style="font-family: 'Courier New'; font-size: 10pt;">odmlpython-cuda10\Library\bin</span>.</p>
            </li>
            <li>
                <p>Or you can download and install <a href="https://developer.nvidia.com/cuda-10.1-download-archive-update2?target_os=Windows&amp;target_arch=x86_64&amp;target_version=10&amp;target_type=exelocal" target="_blank">CUDA&#160;Toolkit 10.1 update 2 from the Nvidia CUDA site</a>.<br />After installation add <span style="font-family: 'Courier New'; font-size: 10pt;">C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1\extras\CUPTI\lib64</span> to the System environment variable Path.</p>
            </li>
        </ol>
        <p>For information about how to use the custom environment in OpendTect <MadCap:variable name="Variables.VersionNumber" /> please see the chapter <a href="../OpendTect/Setup-Python-Settings.htm">Setup Python Settings</a>.</p>
    </body>
</html>