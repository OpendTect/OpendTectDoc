<!DOCTYPE html>
<html data-mc-runtime-file-type="CSH">
    <head>
        <meta name="robots" content="index,follow" />
        <meta name="keywords" content="seismic interpretation, open source, opendtect, open, source, machine learning, d-tect , dtect, survey, analyses, research, geo-sciences, geology, geophysics, petrophysics, seismic, stochastic, modeling, monte carlo, simulation, quantitative, interpretation, inversion, integration, framework, neural network, supervised, unsupervised, reservoir characterisation, reservoir characterization, object detection, software, seismic software, free software, open software, free, application, linux, windows, solaris, mac os, data, SSIS, GDI, rock, studies, plugins, tutorials, users, support, training, documentation, manual, faq, visualization, horizon, faults, madagascar, crossplotting" />
        <meta name="description" content="OpendTect Programmer's Manual - Version 6.6" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" /><title></title>
        <script src="Resources/Scripts/jquery.min.js">
        </script>
        <script src="Resources/Scripts/MadCapAll.js" defer="true">
        </script>
        <script>
        //<![CDATA[
        $(Init);

        function Init()
        {
            var cshid = null;
            var skinName = null;
            var searchQuery = null;
            var firstPick = null;

            if (document.location.hash.length > 0)
            {
                var hash = document.location.hash.substring(1);
                var parts = hash.split("|");

                cshid = parts[0];

                if (parts.length == 2)
                    skinName = parts[1];
            }

            if (document.location.search.length > 0)
            {
                var search = document.location.search.substring(1);
                var parts = search.split("|");

                searchQuery = parts[0];

                if (parts.length == 2)
                    firstPick = parts[1];
            }

            var url = new MadCap.Utilities.Url(document.location.href);
            var urlName = url.Name.substring(0, url.Name.length - "_CSH".length);
            url = url.ToFolder().AddFile(urlName + "." + url.Extension);
            var path = url.PlainPath;

            var isFirst = true;

            if (!MadCap.String.IsNullOrEmpty(cshid))
            {
                if (isFirst)
                    path += "#";

                isFirst = false;

                path += "cshid=" + cshid;
            }

            if (!MadCap.String.IsNullOrEmpty(skinName)) {
                if (isFirst)
                    path += "#";
                else
                    path += "&";

                isFirst = false;

                path += "skinName=" + skinName;
            }

            if (!MadCap.String.IsNullOrEmpty(searchQuery))
            {
                if (isFirst)
                    path += "#";
                else
                    path += "&";

                path += "searchQuery=" + searchQuery;

                if (!MadCap.String.IsNullOrEmpty(firstPick))
                    path += "&firstPick=true";
            }

            document.location.replace(path);
        }
        //]]></script>
    </head>
    <body>
    </body>
</html>