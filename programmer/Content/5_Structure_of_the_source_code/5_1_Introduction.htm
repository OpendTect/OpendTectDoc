<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h2>5.1 Introduction<MadCap:concept term="Introduction" /></h2>
        <p>The repository contains a number of release branches and 2 development branches. The current stable release branch is <a href="https://github.com/OpendTect/OpendTect/tree/od7.0" target="_blank">7.0</a></p>
        <p>The development branches are:</p>
        <p><b>BRANCH	DESCRIPTION</b>
        </p>
        <p><a href="https://github.com/OpendTect/OpendTect/tree/main" target="_blank">main</a>
        </p>
        <p>This is the bleeding edge where migration of OpendTect to new versions of its major dependencies, Qt and OpenSceneGraph, is tested and major new functionality is added.</p>
        <p><a href="https://github.com/OpendTect/OpendTect/tree/od7.0" target="_blank">od7.0</a>
        </p>
        <p>This is the main development branch for the next stable release series 7.0. No major new features are currently being added to this branch as it is being prepared for release.</p>
        <p>Very short</p>
        <p><b>OpendTect:</b>
        </p>
        <p>•	Is in C++ and a tiny bit of C</p>
        <p>•	Uses CMake, which makes it easy to port across platforms</p>
        <p>•	Is built with design principles and strict separations of functionality</p>
        <p>•	Uses exclusively open source tools</p>
        <p>•	Can be extended using plugins</p>
        <p><b>C++</b>
        </p>
        <p>OpendTect is a C++-based environment. A couple of years ago, C++ was declared dead by many as a result of the Java hype. In some areas, Java is indeed far better suited. In our part of the world (geosciences, in particular geophysics-related), we don't think Java can match the advantages of C++: Fast yet flexible, Low-level yet supporting high-level OO constructs. And, we would be terrified having to program without templates.</p>
        <p>That doesn't mean that programming in C++ auto-magically delivers good software, and neither that performance comes easy. Those are some of the things that can be reached by a good design.</p>
    </body>
</html>