<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h2>2.7 Distributing your plugin<MadCap:concept term="Distributing your plugin" /></h2>
        <p>The publishing and distribution of OpendTect plugins is pretty straightforward. The .alo files can be installed in the plugins/platform (<span style="font-family: monospace;">$DTECT_APPL/plugins/$HDIR</span>) directory, while the actual plugins (the .DLL, .so or .dylib files) go in the normal bin sub-directory.</p>
        <p>On Unix, this means that you can make a tar.gz or zip file containing the plugins in a directory structure as described above, which can be extracted into the existing OpendTect installation directory.</p>
        <p>On Windows this is also possible, but it is more common to use an auto-extracting installer to do this. For more info on this, see the windows documentation.</p>
        <p>If you want your plugins to be used around the world, then you may want to contact support@dgbes.com to get your plugin(s) distributed via the OpendTect installation Manager. Be prepared to have thedgbes.com people take a look at your code and test the stability. Then make the packages along the lines described below. You'll also have to provide information about yourself and the plugin - and a picture of a certain size.</p>
        <p>Preparing for the installation manager</p>
        <p>The general structure of a package is explained in the following diagram:</p>
        <p>
            <img src="../Resources/Images/fig-explain-pkg.png" style="width: 656px;height: 277px;" />
        </p>
        <p>It is important that you make the packages nicely modular. Even if you have only two platforms yet, still it's a good idea to split the stuff in platform-independent and platform-dependent stuff. And separate documentation. In that case there would be 4 packages:</p>
        <p>•	The platform-independent part (hidden for the user)</p>
        <p>•	Part for platform 1</p>
        <p>•	Part for platform 2</p>
        <p>•	Documentation</p>
        <p>The user will see only two: the plugin itself and the documentation.</p>
        <p>Then the naming of the packages. Let's not make a big specification document; you can guess this by looking at what is now in the <a href="https://download.opendtect.org/relman/defs/opendtect.txt" target="_blank">opendtect.txt</a> file. Specifics:</p>
        <p>•	We will need a similar package definition file (&lt;vendor&gt;.txt). That is the sort of info we need. Don't worry about the codes you see in there, just the basic info like descriptions and dependencies. That would allow us to make this file. You can deliver the whole file if you want to, but we can also maintain it.</p>
        <p>•	Provide an image for each package you deliver and one for your company (vendor). The target size would be around 100x100 for the product logo and 16x16 for the vendor logo.</p>
        <p>•	Make sure every package contains a file: <span style="font-family: monospace;">&lt;OpendTect version&gt;/relinfo/ver.&lt;package_name&gt;[_plf].txt</span> Like:</p>
        <p style="font-family: monospace;"><MadCap:variable name="Variables.Version" />.0/relinfo/ver.jimsinversion_lux64.txt</p>
        <p style="font-family: monospace;"><MadCap:variable name="Variables.Version" />.0/relinfo/ver.pppraytrace.txt</p>
        <p>You can have your own version numbering, but it has to have this form:</p>
        <p style="font-family: monospace;">number.number.number[optional_free_text_without_dots_starting_with_non_digit]</p>
        <p>You are completely free in your numbering, and the optional text. The installer uses the '&gt;' operator for every part. The numbers have to be integer numbers, and will be compared as integers.</p>
        <p>Users cannot update a package without also updating the packages that these are dependent on. This circumvents the need to specify exactly the dependencies on which versions on what other packages.</p>
    </body>
</html>