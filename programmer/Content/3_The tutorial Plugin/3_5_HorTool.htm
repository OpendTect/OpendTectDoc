<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h2>3.5 HorTool<MadCap:concept term="HorTool" /></h2>
        <p>Similar to <span style="font-family: monospace;">SeisTools</span>, <span style="font-family: monospace;">HorTool</span> performs some simple operations on horizons: thickness computation and smoothening. Each of these operations is handled by a subclass of <span style="font-family: monospace;">HorTool</span> which is a subclass of <span style="font-family: monospace;">Executor</span> and as expected the computation is performed by the function <span style="font-family: monospace;">nextStep()</span>. You may notice here that no object of class <span style="font-family: monospace;">HorTool</span> is defined anywhere. It is only used as the base class for classes <span style="font-family: monospace;">ThicknessCalculator</span> and <span style="font-family: monospace;">HorSmoothener</span>. Let us have a look at the <span style="font-family: monospace;">nextStep()</span> function in class <span style="font-family: monospace;">ThicknessCalculator</span> to see how the data values are accessed in a Horizon3D:</p>
        <p style="font-family: monospace;text-align: left;">int Tut::ThicknessCalculator::nextStep()<br />{<br />&#160;&#160;&#160;&#160;if ( !iter_-&gt;next(bid_) )<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Executor::Finished();<br /><br />&#160;&#160;&#160;&#160;int nrsect = horizon1_-&gt;nrSections();<br />&#160;&#160;&#160;&#160;if ( horizon2_-&gt;nrSections() &lt; nrsect ) nrsect = horizon2_-&gt;nrSections();<br /><br />&#160;&#160;&#160;&#160;for ( EM::SectionID isect=0; isectgetPos( isect, subid ).z;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const float z2 = horizon2_-&gt;getPos( isect, subid ).z;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;float val = mUdf(float);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ( !mIsUdf(z1) &amp;&amp; !mIsUdf(z2) )<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;val = fabs( z2 - z1 ) * usrfac_;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;posid_.setSubID( subid );<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;posid_.setSectionID( isect );<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;horizon1_-&gt;auxdata.setAuxDataVal( dataidx_, posid_, val );<br />&#160;&#160;&#160;&#160;}<br /><br />&#160;&#160;&#160;&#160;nrdone_++;<br />&#160;&#160;&#160;&#160;return Executor::MoreToDo();<br />}</p>
        <p>Please note the difference in the function <span style="font-family: monospace;">dataSaver</span> in the two classes. In <span style="font-family: monospace;">ThicknessCalculator</span>, it saves the auxilary data, whereas in <span style="font-family: monospace;">HorSmoothener</span>, it saves the geometry.</p>
    </body>
</html>